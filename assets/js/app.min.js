/** @format */

function fadeOutPreloader(t, e) {
    (opacity = 1),
        (interval = setInterval(function () {
            opacity <= 0
                ? ((t.style.zIndex = 0),
                    (t.style.opacity = 0),
                    (t.style.filter = "alpha(opacity = 0)"),
                    (document.documentElement.style.overflowY = "auto"),
                    document.getElementById("preloader").remove(),
                    clearInterval(interval))
                : ((opacity -= 0.1),
                    (t.style.opacity = opacity),
                    (t.style.filter = "alpha(opacity = " + 100 * opacity + ")"));
        }, e));
}
setTimeout(function () {
    fadeOutPreloader(document.getElementById("preloader"), 69);
}, 1500),
    $(document).ready(function () {
        $(window).on("beforeunload", function () {
            window.scrollTo(0, 0);
        }),
            particlesJS.load(
                "landing",
                "assets/particles.json",
                function () { }
            );
        var t = document.getElementById("txt-rotate"),
            e = t.getAttribute("data-rotate"),
            i = t.getAttribute("data-period");
        setTimeout(function () {
            new TxtRotate(t, JSON.parse(e), i);
        }, 1500);
        var n = document.createElement("style");
        (n.type = "text/css"),
            (n.innerHTML =
                "#txt-rotate > .wrap { border-right: 0.08em solid #666 }"),
            document.body.appendChild(n),
            AOS.init({
                disable: "mobile",
                offset: 200,
                duration: 600,
                easing: "ease-in-sine",
                delay: 100,
                once: !0,
            }),
            randomizeOrder();
    });
var TxtRotate = function (t, e, i) {
    (this.toRotate = e),
        (this.el = t),
        (this.loopNum = 0),
        (this.period = parseInt(i, 10) || 2e3),
        (this.txt = ""),
        this.tick(),
        (this.isDeleting = !1);
};
function randomizeOrder() {
    for (
        var t = document.getElementById("skills"),
        e = t.getElementsByTagName("div"),
        i = document.createDocumentFragment();
        e.length;

    )
        i.appendChild(e[Math.floor(Math.random() * e.length)]);
    t.appendChild(i);
}
TxtRotate.prototype.tick = function () {
    var t = this.loopNum % this.toRotate.length,
        e = this.toRotate[t];
    this.isDeleting
        ? (this.txt = e.substring(0, this.txt.length - 1))
        : (this.txt = e.substring(0, this.txt.length + 1)),
        (this.el.innerHTML = '<span class="wrap">' + this.txt + "</span>");
    var i = this,
        n = 200 - 100 * Math.random();
    this.isDeleting && (n /= 5),
        this.isDeleting || this.txt !== e
            ? this.isDeleting &&
            "" === this.txt &&
            ((this.isDeleting = !1), this.loopNum++, (n = 500))
            : ((n = this.period), (this.isDeleting = !0)),
        setTimeout(function () {
            i.tick();
        }, n);
};
function showTab(evt, projId, tabId) {
    var i, project, tabcontent, tablinks;
    project = document.getElementById(projId);
    tabcontent = document.getElementsByClassName(projId + " tabcontent");
    for (i = 0; i < tabcontent.length; i++) {
        tabcontent[i].style.display = "none";
    }
    tablinks = document.getElementsByClassName(projId + " tablinks");
    for (i = 0; i < tablinks.length; i++) {
        tablinks[i].className = tablinks[i].className.replace(" active", "");
    }
    document.getElementById(tabId).style.display = "block";
    evt.currentTarget.className += " active";
}

function includeHTML() {
    var z, i, elmnt, file, xhttp;
    /* Loop through a collection of all HTML elements: */
    z = document.getElementsByTagName("*");
    for (i = 0; i < z.length; i++) {
        elmnt = z[i];
        /*search for elements with a certain atrribute:*/
        file = elmnt.getAttribute("w3-include-html");
        if (file) {
            /* Make an HTTP request using the attribute value as the file name: */
            xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function () {
                if (this.readyState == 4) {
                    if (this.status == 200) { elmnt.innerHTML = this.responseText; }
                    if (this.status == 404) { elmnt.innerHTML = "Page not found."; }
                    /* Remove the attribute, and call this function once more: */
                    elmnt.removeAttribute("w3-include-html");
                    includeHTML();
                }
            }
            xhttp.open("GET", file, true);
            xhttp.send();
            /* Exit the function: */
            return;
        }
    }
}